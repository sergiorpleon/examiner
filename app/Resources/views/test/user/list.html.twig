{% extends 'themebackend.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('bundles/app/css/material-icons.min.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/app/css/vuetifytable.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/app/css/bootstrap-datepicker3.min.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/app/css/bootstrap-timepicker.min.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/app/css/vue-html5-editor.css') }}" rel="stylesheet">
    <style>
        .list .ui-datepicker {
            background-color: #FFF;
            border: 1px solid rgba(0, 0, 0, .2);
            box-shadow: 0 2px 4px rgba(0, 0, 0, .2);
        }

        .list .dropdown-menu, .ui-datepicker {
            -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, .2);
        }

        .list .ui-datepicker {
            width: 17em;
            padding: .2em .2em 0;
            display: none;
        }

        .list .ui-helper-clearfix {
            min-height: 0;
        }

        .list .ui-helper-clearfix:after, .ui-helper-clearfix:before {
            content: "";
            display: table;
            border-collapse: collapse;
        }

        .reading .nav-tabs-left {
            margin-right: -1px;
            padding-right: 0px;
            border-right: 1px solid #ddd;
        }

        .reading .nav-left > li > a {
            margin-right: 2px;
            line-height: 1.42857143;
            border: 1px solid transparent;
            border-radius: 4px 0px 0px 4px;
        }

        .reading .nav-left > li > a {
            padding-right: 0px;
            margin-right: -1px;
        }

        .reading .nav-left > li.active > a, .nav-left > li.active > a:focus, .nav-left > li.active > a:hover {
            color: #555;
            cursor: default;
            background-color: #fff;
            border: 1px solid #ddd;
            border-right-color: transparent;
        }

        .reading .tab-content {
            border-top: 1px solid #ddd;

        }

        .reading .btn_empty {
            background-color: transparent;
            border-color: transparent;
            padding: 0px;
        }

        span.icon.custom-icon.table {
            margin-bottom: 0px !important;
        }

        .col-sm-0, .col-xs-0 {
            width: 0%;
        }

        /*estilo personalizado*/
        .ss-inciso-panel {
            border: 1px solid #ddd;
            background: aliceblue;
        }

        .borde-item-panel {
            border: 1px solid #ddd;
        }

        .fondo-blanco {
            background: white;
        }

        .ss-inciso-btn-cerrar {
            position: relative;
            float: right;
            right: -22px;
            top: -7px;
            z-index: 1;
        }

        .box.box-primary {
            border-top-color: #3c8dbc;
        }

        .box {
            position: relative;
            border-radius: 3px;
            background: #ffffff;
            border-top: 3px solid #d2d6de;
            margin-bottom: 20px;
            width: 100%;
            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
        }

        .btn-50w {
            width: 50px;
        }

        .btn-70w {
            width: 80px;
        }

        .col-editor {
            padding-left: 0px;
            padding-right: 0px;
        }

        .en-barra {
            position: fixed;
            z-index: 10000;
            top: -5px;
            right: 120px;
        }

        @media (max-width: 768px) {
            .en-barra {
                position: absolute;
                top: -135px;
            }
        }

        .card > ul {
            background: white;
        }

        .mce-tinymce.mce-container.mce-panel.mce-fullscreen {
            margin-top: 60px !important;
        }

        .btn {
            padding: 4px 12px;
            line-height: 1.5;

        }

        .btn-default {
            background-color: #f4f4f4;
            color: #444;
            border-color: #ddd;
        }

        .modal-dialog > .modal-content .btn {
            border-radius: 1px !important;
        }

        .modal-dialog > .modal-content {
            border-radius: 1px !important;
        }

        .modal-dialog {
            width: 400px;

        }

        .table > thead:first-child > tr:first-child > th {
            color: #367fa9;
        }

        .overlay > div {
            max-width: 200px;
            margin: auto;
            display: flex;
            align-items: center;
            height: 100%;
            text-align: center;
            font-size: 30px;
        }

        .overlay {
            width: 100%;
            height: 100%;
            background: rgba(200, 200, 200, 0.1);
            overflow-x: hidden;
            overflow-y: auto;
            position: fixed;
            display: none;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1050;
            overflow: hidden;
            -webkit-overflow-scrolling: touch;
            outline: 0;
        }

        .limit-height {
            max-height: 35px;
            overflow-y: hidden;

        }

        .mce-branding.mce-widget.mce-label.mce-flow-layout-item.mce-last {
            display: none;
        }

        .result > ul {
            display: block;
        }

        .show-preview > div {
            width: 90%;
        }

        .show-preview > div > div .bootbox-body {
            padding: 80px;
        }

        .results > div > div > div.col-sm-12 {
            background-color: #eee;

        }

    </style>
{% endblock %}

{% block content %}
    <div id="app">
        <!-- route outlet -->
        <!-- component matched by the route will render here -->
        <router-view></router-view>


        <!-- plantilla componente lista prueba -->
        <script type="text/x-template" id="list">
            <div class="list1">

                <section class="content-header">
                    <ol class="breadcrumb">
                        <li class="active">List User</li>

                    </ol>
                </section>

                <div class="row form-panel box box-primary">
                    <div class="row col-xs-12" style="margin-bottom: 10px; margin-left: 0px;">
                        <div class="col-sm-4 col-xs-6 col col-editor">
                            <input class="form-control " type="text" v-model="search" placeholder="Search..."/>
                        </div>
                        <div class="col-sm-8 col-xs-6">
                            <!-- router-link v-bind:to="enrutar(-1)" class="btn btn-default btn-70w" style="float: right" -->
                            <!-- router-link v-bind:to="{ name: 'new_prueba', params: { id: -1 }}" class="btn btn-default btn-70w" style="float: right">
                                <i class="fa fa-plus-circle"></i>  Add
                            </router-link -->
                        </div>
                    </div>
                    <div class="row col-xs-12" style="margin-left: 0px;">
                        <template>
                            <v-card>
                                <v-data-table v-bind:headers="headers" v-bind:items="items" v-bind:search="search">
                                    <template slot="items" scope="props">
                                        <td class="text-xs-right">{{ "{{ props.item.id}}" }}</td>
                                        <td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.username"></div>
                                        </td>
                                        <td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.enabled"></div>
                                        </td><td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.email"></div>
                                        </td>
                                        <td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.nombre"></div>
                                        </td>
                                        <td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.expired"></div>
                                        </td>
                                        <td class="text-xs-right">
                                            <div class="limit-height" v-html=" props.item.locked"></div>
                                        </td>
                                        <td class="text-xs-right">
                                            <div class="limit-height">
                                                <div v-for="(rol, index) in props.item.roles">
                                                    {{"{{rol}}"}}
                                                </div>
                                            </div>
                                        </td>

                                        <td>
                                            <!-- router-link class="btn btn-default btn-70w" v-bind:to="enrutar(props.item.id)" -->
                                            <router-link class="btn btn-default btn-70w" v-bind:to="{ name: 'user_edit', params: { id: props.item.id }}">
                                                <i class="fa fa-pencil"></i> Edit
                                            </router-link>
                                            <button class="btn btn-default btn-70w" v-on:click="delUser( props.item.id)"><i class="fa fa-times"></i> Delete</button >
                                        </td>
                                    </template>
                                </v-data-table>
                            </v-card>
                        </template>
                    </div>
                </div>
            </div>
        </script>


        <!-- Resultado de una prueba para un usuario-->
        <script type="text/x-template" id="user">
            <div>

                <section class="content-header">
                    <section class="content-header">
                        <ol class="breadcrumb">
                            <li>
                                <router-link
                                        v-bind:to="{ name: 'user_list'}">
                                    Users
                                </route-link>
                            </li>
                            <li class="active">Edit</li>

                        </ol>
                    </section>

                    <div class="row form-panel box box-primary results">

                        <div class="col-sm-2">

                        </div>
                        <div class="col-sm-8">
                            <div class="col-sm-12">
                                <h4>
                                    Edit User
                                </h4>
                                <hr/>
                            </div>

                            <div class="col-sm-12">
                                <h5>
                                  Name
                                </h5>
                                <input class="col-sm-12" v-model="user.nombre">
                            </div>
                            <div class="col-sm-12">
                            <br/>
                            </div>
                            <div class="col-sm-12">
                                <h5>
                                    Username
                                </h5>
                                <input class="col-sm-12" v-model="user.username">
                            </div>
                            <div class="col-sm-12">
                                <br/>
                            </div>
                            <div class="col-sm-12">
                                <h5>
                                    Email
                                </h5>
                                <input class="col-sm-12" v-model="user.email">
                            </div>
                            <div class="col-sm-12">
                                <br/>
                            </div>
                            <div class="col-sm-12">
                                <input type="checkbox" v-model="user.enabled"> <label> Enabled</label>
                            </div>
                            <div class="col-sm-12">
                                <br/>
                            </div>
                            <div class="col-sm-12">
                                <input type="checkbox" v-model="user.locaked"> <label> Locked</label>
                            </div>
                            <div class="col-sm-12">
                                <br/>
                            </div>
                            <div class="col-sm-12">
                                <input type="checkbox" v-model="user.expired"> <label> Expired</label>
                            </div>

                            <div class="col-sm-12">
                                <br/>
                            </div>
                            <div class="col-sm-12">
                                <h5>
                                    Roles
                                </h5>

                            </div>
                            <div class="col-sm-12" v-for="(rol, index) in user.roles">
                                <input type="checkbox" v-model="user.roles[index]"> <label> {{ '{{ user.arrayroles[index] }}' }}</label>
                            </div>

                            <div class="col-sm-12">
                                <br/>
                            </div>
                        </div>
                        <div class="col-sm-2">
                        </div>
                        <div class="col-sm-12">
                        <button class="btn btn-info" style="margin-top: 20px;" v-on:click="guardarUser()"><i class="fa fa-save"></i> Save</button>
                        <!-- button class="btn btn-info" style="margin-top: 20px;" v-on:click="continuarUser()"><i class="fa fa-save"></i> Save and Continue</button -->
                        <router-link class="btn btn-warning" style="margin-top: 20px;"  v-bind:to="{ name: 'user_list'}">
                            <i class="fa fa-save"></i> Cancel
                        </router-link>
                        </div>
                    </div>


                </section>
            </div>
        </script>

    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/app/js/vue.min.js') }}"></script>
    <script src="{{ asset('bundles/app/js/vue-resource.js') }}"></script>
    <script src="{{ asset('bundles/app/js/vue-router.js') }}"></script>
    <script src="{{ asset('bundles/app/js/vuetify.min.js') }}"></script>
    <script src="{{ asset('bundles/app/tinymce/tinymce.min.js') }}"></script>
    <script type="text/javascript">


        //--->>>>>ruta lista de prueba<<<<<---
        var List = Vue.extend({
            template: '#list',
            data: function () {
                return {
                    isActive: false,
                    search: '',
                    pagination: {},
                    headers: [
                        {
                            text: 'Id',
                            left: true,
                            sortable: false,
                            value: 'id'
                        },
                        //{text: 'Fecha', value: 'fecha'},
                        {text: 'Username', value: 'username'},
                        {text: 'Enabled', value: 'enabled'},
                        {text: 'Email', value: 'email'},
                        {text: 'Name', value: 'nombre'},
                        {text: 'Expired', value: 'expired'},
                        {text: 'Locked', value: 'locked'},
                        {text: 'Roles', sortable: false,},
                        {text: 'Action', sortable: false,},
                    ],
                    items: [
                        {
                            id: -1,
                            //fecha: 'fecha',
                            enabled: false,
                            expired: false,
                            locked: false,
                            username: '',
                            email: '',
                            nombre: '',
                            total: '',
                            //roles: '',

                        },
                    ],
                    startDate: '25-04-2010',
                }
            },
            created: function () {
                jQuery('.overlay').css('display', 'block');
                this.getList();
                //this.inicializar();
                window.scrollTo(0, 0);
                jQuery('.breadcrumb').animate({ scrollTop: 0 }, 'slow');
            },

            methods: {
                enrutar: function (id) {
                    return "/" + id;
                },

                ocultar: function () {
                    this.isActive = false;
                },

                mostrar: function () {
                    this.isActive = true;
                },

                editUser: function(id){

                },

                delUser: function(index){
                    var gthis = this;
                    var gindex = index;
                    //a = this.readingtmp.secciones;
                    bootbox.confirm("Are you sure?", function (result) {
                        if (result) {
                            jQuery('.overlay').css('display','block');
                            NProgress.start();
                            gthis.$http.post("{{  path('delete_user') }}", {
                                id: gindex,
                            }, function (data, status, request) {
                                gthis.getList();
                                NProgress.done();
                                NProgress.remove();
                            });
                        }
                    });
                },


                //--------------------------------------BEGIN-CRUD---------------------------------------------
                //read question
                getList: function () {
                    NProgress.start();

                    this.$http.get("{{  path('user_list_json') }}", function (data, status, request) {
                        this.items = data;
                        this.loading = true;
                        jQuery('.overlay').css('display', 'none');
                        NProgress.done();
                        NProgress.remove();
                    }).catch(function (data, status, request) {
                        console.log('error');
                        NProgress.done();
                        NProgress.remove();
                    });
                },

            }
        });

        //-----------------Result user x prueba x
        var User = Vue.extend({
            template: '#user',
            data: function () {
                return {

                    user: {
                        id: '-1',
                        nombre: '',
                        username: '',
                        email: '',
                        enabled: '',
                        locaked: '',
                        expired: '',
                        roles: [],
                    },

                };
            },
            created: function () {
                jQuery('.overlay').css('display', 'block');
                this.user.id = (this.$route.params.id);
                this.getUser();

                window.scrollTo(0, 0);
            },

            methods: {

                boxScrollTop: function(){
                    jQuery('.bootbox').animate({ scrollTop: 0 }, 'slow');
                },

                guardarUser: function(){
                    this.getEdit();
                },

                continuarUser: function(){
                    this.getEdit();
                },



                //============================BEGIN CRUD==================================

                //read question
                getEdit: function () {
                    NProgress.start();

                    this.$http.post("{{  path('update_user') }}", {
                        id: this.user.id,
                        nombre: this.user.nombre,
                        username: this.user.username,
                        email: this.user.email,
                        enabled: this.user.enabled,
                        locked: this.user.locked,
                        expired: this.user.expired,
                        roles: this.user.roles,
                        arrayroles: this.user.arrayroles,
                    }, function (data, status, request) {
                        //alert(JSON.stringify(data));
                        this.getUser();

                        jQuery('.overlay').css('display', 'none');

                        //this.$route.params.id = 2;

                        NProgress.done();
                        NProgress.remove();
                    })
                },

                getUser: function () {

                    if (this.$route.params.id != -1) {
                        NProgress.start();

                        this.$http.post("{{  path('edit_user') }}", {
                            id: this.user.id,
                        }, function (data, status, request) {
                            this.user = data;
                            //alert(JSON.stringify(this.prueba));
                            jQuery('.overlay').css('display', 'none');

                            //this.$route.params.id = 2;
                            NProgress.done();
                            NProgress.remove();
                        })
                    } else {
                        jQuery('.overlay').css('display', 'none');
                        NProgress.done();
                        NProgress.remove();

                    }
                },
                //========================END CRUD==================================

            },
        });

        // 2. Define some routes
        const routes = [
            {path: '/:id', name: 'user_edit', component: User},
            {path: '/', name: 'user_list', component: List},
        ]

        // 3. Create the router instance and pass the `routes` option
        const router = new VueRouter({
            routes: routes, // short for `routes: routes`
        })

        // 4. Create and mount the root instance.
        const app = new Vue({
            router: router,
            delimiters: ['${', '}'],
            data: {
                msg: 'Sergio',
            },

        }).$mount('#app');

        jQuery('.config').addClass('active');
        jQuery('.config > a').addClass('active');
    </script>
{% endblock %}